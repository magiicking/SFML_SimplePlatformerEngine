#pragma once

#include "pch.h"
#include "MagicGridCell.h"
#include "MagicGameObject.h"
#include "utilites.h"

using namespace std;
using namespace concurrency;


////////////////////////////////////////////////////////////
/// \brief Ячейка сетки столкновений.
///
////////////////////////////////////////////////////////////
class MagicGridCell
{
private:

	////////////////////////////////////////////////////////////
	/// \brief Уникальный указатель на сет неподвижных объектов.
	///
	////////////////////////////////////////////////////////////
	unique_ptr<concurrent_unordered_set<MagicGameObject*,utilites::PointerHash<MagicGameObject>,utilites::PointerComparator<MagicGameObject>>> static_objects;

	////////////////////////////////////////////////////////////
	/// \brief Уникальный указатель на сет подвижных объектов.
	///
	////////////////////////////////////////////////////////////
	unique_ptr<concurrent_unordered_set<MagicGameObject*, utilites::PointerHash<MagicGameObject>, utilites::PointerComparator<MagicGameObject>>> dynamic_objects;

public:
	////////////////////////////////////////////////////////////
	/// \brief Конструктор по умолчанию.
	///
	/// Создает сеты объектов.
	///
	////////////////////////////////////////////////////////////
	MagicGridCell();

	////////////////////////////////////////////////////////////
	/// \brief Возвращает указатель на сет неподвижных объектов. 
	///
	////////////////////////////////////////////////////////////
	concurrent_unordered_set<MagicGameObject*, utilites::PointerHash<MagicGameObject>, utilites::PointerComparator<MagicGameObject>>* const GetStaticObjectsSet() const;

	////////////////////////////////////////////////////////////
	/// \brief Возвращает указатель на сет подвижных объектов.
	///
	////////////////////////////////////////////////////////////
	concurrent_unordered_set<MagicGameObject*, utilites::PointerHash<MagicGameObject>, utilites::PointerComparator<MagicGameObject>>* const GetDynamicObjectsSet() const;

	////////////////////////////////////////////////////////////
	/// \brief Добавляет статический объект.
	/// 
	/// \param Параметр     Заполнить параметры.
	///
	////////////////////////////////////////////////////////////
	bool AddStaticObject(MagicGameObject* object);

	////////////////////////////////////////////////////////////
	/// \brief Добавляет подвижный объект.
	/// 
	/// \param Параметр     Заполнить параметры.
	///
	////////////////////////////////////////////////////////////
	bool AddDynamicObject(MagicGameObject* object);

	////////////////////////////////////////////////////////////
	/// \brief Проверяет наличие статических объектов.
	///
	////////////////////////////////////////////////////////////
	bool HasStaticObjects() const;

	////////////////////////////////////////////////////////////
	/// \brief Проверяет наличие подвижных объектов.
	///
	////////////////////////////////////////////////////////////
	bool HasDynamicObjects() const;
};

