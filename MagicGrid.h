#pragma once

#include "pch.h"
#include "MagicGridColumn.h"

class MagicGameObject;

using namespace std;
using namespace concurrency;


////////////////////////////////////////////////////////////
/// \brief Класс сетки.
///
/// Предназначен для хранения игровых объектов
/// для дальнейшей проверки столкновений.
/// 
/// 
///
////////////////////////////////////////////////////////////
class MagicGrid
{
private:
	////////////////////////////////////////////////////////////
	/// \brief Сетка.
	///
	/// Содержит вектор уникальных указателей на
	/// объекты-колонки.
	/// 
	/// 
	///
	////////////////////////////////////////////////////////////
	vector<unique_ptr<MagicGridColumn>> grid;

	////////////////////////////////////////////////////////////
	/// \brief Размер ячейки.
	///
	/// Нужен для перевода мировых координат в номера ячеек.
	///
	////////////////////////////////////////////////////////////
	float cellSize;

	size_t width;

	size_t height;

public:
	////////////////////////////////////////////////////////////
	/// \brief Конструктор объекта.
	///
	/// Создает сетку с определенными шириной, высотой
	/// и размером ячейки
	/// 
	/// \param width     Ширина сетки.
	/// \param height     Высота сетки.
	/// \param _cellSize     Размер ячейки сетки.
	///
	////////////////////////////////////////////////////////////
	MagicGrid(const size_t width, const size_t height, const float _cellSize);

	////////////////////////////////////////////////////////////
	/// \brief Возвращает сет статичных объектов из определенной ячейки.
	/// 
	/// \param x     х-координата ячейки.
	/// \param y     у-координата ячейки.
	///
	////////////////////////////////////////////////////////////
	utilites::MagicGameObjectsConcurrensUnorderedSet* const GetCellStaticObjectsSet(const size_t x, const size_t y)  const;

	////////////////////////////////////////////////////////////
	/// \brief Возвращает сет подвижных объектов из определенной ячейки.
	/// 
	/// \param x     х-координата ячейки.
	/// \param y     у-координата ячейки.
	///
	////////////////////////////////////////////////////////////
	utilites::MagicGameObjectsConcurrensUnorderedSet* const GetCellDynamicObjectsSet(const size_t x, const size_t y)  const;

	////////////////////////////////////////////////////////////
	/// \brief Добавляет статичный объект в сетку.
	///
	/// Объект помещается в те ячейки, которые пересекаются
	/// с границами объекта.
	/// 
	/// \param object     Указатель на объект.
	///
	////////////////////////////////////////////////////////////
	bool AddStaticObject(MagicGameObject* object);

	////////////////////////////////////////////////////////////
	/// \brief Добавляет подвижный объект в сетку.
	///
	/// Объект помещается в те ячейки, которые пересекаются
	/// с границами объекта.
	/// 
	/// \param object     Указатель на объект.
	///
	////////////////////////////////////////////////////////////
	bool AddDynamicObject(MagicGameObject* object);

	////////////////////////////////////////////////////////////
	/// \brief Получит размер ячейки.
	///
	////////////////////////////////////////////////////////////
	float GetCellSize() const;

	sf::Vector2f GetOriginPoint() const;

};

